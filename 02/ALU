// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the two output bits:
 * if (out == 0) zr = 1, else zr = 0
 * if (out < 0)  ng = 1, else ng = 0
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute (out = x + y) or (out = x & y)?
        no; // negate the out output?
    OUT 
        out[16], // 16-bit output
        zr,      // if (out == 0) equals 1, else 0
        ng;      // if (out < 0)  equals 1, else 0

    PARTS:
    //zx
    Mux16(a= x, b= false, sel= zx, out= zxout);
    //nx
    Not16(in= zxout, out= zxoutnot);
    Mux16(a= zxout, b= zxoutnot, sel= nx, out= nxout);
    
    //zy
    Mux16(a= y, b= false, sel= zy, out= zyout);
    Not16(in= zyout, out= zyoutnot);
    //ny
    Mux16(a= zyout, b= zyoutnot, sel= ny, out= nyout);

    //f
    Add16(a = nxout, b = nyout, out = nxplusnyout);
    And16(a= nxout, b= nyout, out= nxandnyout);
    Mux16(a= nxandnyout, b= nxplusnyout, sel= f, out= fout);

    //no
    Not16(in= fout, out= foutnot);
    Mux16(a= fout, b= foutnot, sel= no, out= out, out[15]=firstOut, out[0..7] = outLow, out[8..15] = outHigh);

    //zr
    Or8Way(in= outLow, out= outLowOr8Way);
    Or8Way(in= outHigh, out= outHighOr8Way);
    Or(a= outLowOr8Way, b= outHighOr8Way, out= isNotZero);
    Not(in= isNotZero, out= zr);

    //ng(zr의 반전이 ng라고 생각했는데 테스트에서 걸린다. 왜지?)
    And(a=firstOut, b=true, out=ng);

}
